{"mappings":"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","sources":["node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/dom.js","node_modules/dom7/dom7.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/images/index.js","node_modules/swiper/core/images/loadImage.js","node_modules/swiper/core/images/preloadImages.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/lazy/lazy.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/customer-review-slider.js"],"sourcesContent":["/**\n * Swiper 8.3.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2022 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: July 26, 2022\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Lazy } from './modules/lazy/lazy.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport $ from '../shared/dom.js';\nimport { extend, now, deleteProps } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport images from './images/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes,\n  images\n};\nconst extendedDefaults = {};\n\nclass Swiper {\n  constructor() {\n    let el;\n    let params;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    if (params.el && $(params.el).length > 1) {\n      const swipers = [];\n      $(params.el).each(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    } // Swiper Instance\n\n\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    }); // Extend defaults with modules params\n\n    const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\n\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params); // add event listeners\n\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    } // Save Dom lib\n\n\n    swiper.$ = $; // Extend Swiper\n\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEvents: function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3]\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2]\n        };\n        return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }(),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper'); // Init\n\n    if (swiper.params.init) {\n      swiper.init();\n    } // Return app instance\n\n\n    return swiper;\n  }\n\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    swiper.emit('enable');\n  }\n\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n\n    swiper.emit('disable');\n  }\n\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.each(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n\n  slidesPerViewDynamic(view, exact) {\n    if (view === void 0) {\n      view = 'current';\n    }\n\n    if (exact === void 0) {\n      exact = false;\n    }\n\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    let translated;\n\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (!translated) {\n        setTranslate();\n      }\n    }\n\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate) {\n    if (needUpdate === void 0) {\n      needUpdate = true;\n    }\n\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n\n    swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.each(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n\n    if (swiper.rtl) {\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.$el.removeClass(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n\n    swiper.update();\n  }\n\n  mount(el) {\n    const swiper = this;\n    if (swiper.mounted) return true; // Find el\n\n    const $el = $(el || swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return false;\n    }\n\n    el.swiper = swiper;\n\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n        res.children = options => $el.children(options);\n\n        return res;\n      }\n\n      if (!$el.children) {\n        return $($el).children(getWrapperSelector());\n      }\n\n      return $el.children(getWrapperSelector());\n    }; // Find Wrapper\n\n\n    let $wrapperEl = getWrapper();\n\n    if ($wrapperEl.length === 0 && swiper.params.createElements) {\n      const document = getDocument();\n      const wrapper = document.createElement('div');\n      $wrapperEl = $(wrapper);\n      wrapper.className = swiper.params.wrapperClass;\n      $el.append(wrapper);\n      $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\n        $wrapperEl.append(slideEl);\n      });\n    }\n\n    Object.assign(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n    });\n    return true;\n  }\n\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit'); // Set breakpoint\n\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Add Classes\n\n\n    swiper.addClasses(); // Create loop\n\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    } // Update size\n\n\n    swiper.updateSize(); // Update slides\n\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    } // Set Grab Cursor\n\n\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    } // Slide To Initial Slide\n\n\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    } // Attach events\n\n\n    swiper.attachEvents(); // Init Flag\n\n    swiper.initialized = true; // Emit\n\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n\n  destroy(deleteInstance, cleanStyles) {\n    if (deleteInstance === void 0) {\n      deleteInstance = true;\n    }\n\n    if (cleanStyles === void 0) {\n      cleanStyles = true;\n    }\n\n    const swiper = this;\n    const {\n      params,\n      $el,\n      $wrapperEl,\n      slides\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy'); // Init Flag\n\n    swiper.initialized = false; // Detach events\n\n    swiper.detachEvents(); // Destroy loop\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    } // Cleanup styles\n\n\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n\n      if (slides && slides.length) {\n        slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy'); // Detach emitter events\n\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      deleteProps(swiper);\n    }\n\n    swiper.destroyed = true;\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n\n    Swiper.installModule(module);\n    return Swiper;\n  }\n\n}\n\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, styles, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove } from 'dom7';\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  styles,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove\n};\nObject.keys(Methods).forEach(methodName => {\n  Object.defineProperty($.fn, methodName, {\n    value: Methods[methodName],\n    writable: true\n  });\n});\nexport default $;","/**\n * Dom7 4.0.4\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * https://framework7.io/docs/dom7.html\n *\n * Copyright 2022, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: January 11, 2022\n */\nimport { getWindow, getDocument } from 'ssr-window';\n\n/* eslint-disable no-proto */\nfunction makeReactive(obj) {\n  const proto = obj.__proto__;\n  Object.defineProperty(obj, '__proto__', {\n    get() {\n      return proto;\n    },\n\n    set(value) {\n      proto.__proto__ = value;\n    }\n\n  });\n}\n\nclass Dom7 extends Array {\n  constructor(items) {\n    if (typeof items === 'number') {\n      super(items);\n    } else {\n      super(...(items || []));\n      makeReactive(this);\n    }\n  }\n\n}\n\nfunction arrayFlat(arr = []) {\n  const res = [];\n  arr.forEach(el => {\n    if (Array.isArray(el)) {\n      res.push(...arrayFlat(el));\n    } else {\n      res.push(el);\n    }\n  });\n  return res;\n}\nfunction arrayFilter(arr, callback) {\n  return Array.prototype.filter.call(arr, callback);\n}\nfunction arrayUnique(arr) {\n  const uniqueArray = [];\n\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group) => group.toUpperCase());\n}\n\n// eslint-disable-next-line\n\nfunction qsa(selector, context) {\n  if (typeof selector !== 'string') {\n    return [selector];\n  }\n\n  const a = [];\n  const res = context.querySelectorAll(selector);\n\n  for (let i = 0; i < res.length; i += 1) {\n    a.push(res[i]);\n  }\n\n  return a;\n}\n\nfunction $(selector, context) {\n  const window = getWindow();\n  const document = getDocument();\n  let arr = [];\n\n  if (!context && selector instanceof Dom7) {\n    return selector;\n  }\n\n  if (!selector) {\n    return new Dom7(arr);\n  }\n\n  if (typeof selector === 'string') {\n    const html = selector.trim();\n\n    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n      let toCreate = 'div';\n      if (html.indexOf('<li') === 0) toCreate = 'ul';\n      if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n      if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n      if (html.indexOf('<tbody') === 0) toCreate = 'table';\n      if (html.indexOf('<option') === 0) toCreate = 'select';\n      const tempParent = document.createElement(toCreate);\n      tempParent.innerHTML = html;\n\n      for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n        arr.push(tempParent.childNodes[i]);\n      }\n    } else {\n      arr = qsa(selector.trim(), context || document);\n    } // arr = qsa(selector, document);\n\n  } else if (selector.nodeType || selector === window || selector === document) {\n    arr.push(selector);\n  } else if (Array.isArray(selector)) {\n    if (selector instanceof Dom7) return selector;\n    arr = selector;\n  }\n\n  return new Dom7(arrayUnique(arr));\n}\n\n$.fn = Dom7.prototype;\n\n// eslint-disable-next-line\n\nfunction addClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.add(...classNames);\n  });\n  return this;\n}\n\nfunction removeClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.remove(...classNames);\n  });\n  return this;\n}\n\nfunction toggleClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    classNames.forEach(className => {\n      el.classList.toggle(className);\n    });\n  });\n}\n\nfunction hasClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  return arrayFilter(this, el => {\n    return classNames.filter(className => el.classList.contains(className)).length > 0;\n  }).length > 0;\n}\n\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  } // Set attrs\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n\n  return this;\n}\n\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction data(key, value) {\n  let el;\n\n  if (typeof value === 'undefined') {\n    el = this[0];\n    if (!el) return undefined; // Get value\n\n    if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n      return el.dom7ElementDataStorage[key];\n    }\n\n    const dataKey = el.getAttribute(`data-${key}`);\n\n    if (dataKey) {\n      return dataKey;\n    }\n\n    return undefined;\n  } // Set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n\n  return this;\n}\n\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\n\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n\n  if (el.dataset) {\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      const attr = el.attributes[i];\n\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n\n  return dataset;\n}\n\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    // get value\n    const el = this[0];\n    if (!el) return undefined;\n\n    if (el.multiple && el.nodeName.toLowerCase() === 'select') {\n      const values = [];\n\n      for (let i = 0; i < el.selectedOptions.length; i += 1) {\n        values.push(el.selectedOptions[i].value);\n      }\n\n      return values;\n    }\n\n    return el.value;\n  } // set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n\n  return this;\n}\n\nfunction value(value) {\n  return this.val(value);\n}\n\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transform = transform;\n  }\n\n  return this;\n}\n\nfunction transition(duration) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n  }\n\n  return this;\n}\n\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n      const parents = $(target).parents(); // eslint-disable-line\n\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    listener.apply(this, eventData);\n  }\n\n  const events = eventType.split(' ');\n  let j;\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n  const events = eventType.split(' ');\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\n\nfunction trigger(...args) {\n  const window = getWindow();\n  const events = args[0].split(' ');\n  const eventData = args[1];\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n\n      if (window.CustomEvent) {\n        const evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true\n        });\n        el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction transitionEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction animationEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('animationend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('animationend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction width() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\n\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n\n    return this[0].offsetWidth;\n  }\n\n  return null;\n}\n\nfunction height() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\n\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n\n    return this[0].offsetHeight;\n  }\n\n  return null;\n}\n\nfunction offset() {\n  if (this.length > 0) {\n    const window = getWindow();\n    const document = getDocument();\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: box.top + scrollTop - clientTop,\n      left: box.left + scrollLeft - clientLeft\n    };\n  }\n\n  return null;\n}\n\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n\n  return this;\n}\n\nfunction show() {\n  const window = getWindow();\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n\n  return this;\n}\n\nfunction styles() {\n  const window = getWindow();\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\n\nfunction css(props, value) {\n  const window = getWindow();\n  let i;\n\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      // .css('width')\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      // .css({ width: '100px' })\n      for (i = 0; i < this.length; i += 1) {\n        for (const prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n\n      return this;\n    }\n  }\n\n  if (arguments.length === 2 && typeof props === 'string') {\n    // .css('width', '100px')\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction each(callback) {\n  if (!callback) return this;\n  this.forEach((el, index) => {\n    callback.apply(el, [el, index]);\n  });\n  return this;\n}\n\nfunction filter(callback) {\n  const result = arrayFilter(this, callback);\n  return $(result);\n}\n\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n\n  return this;\n}\n\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    return this[0] ? this[0].textContent.trim() : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n\n  return this;\n}\n\nfunction is(selector) {\n  const window = getWindow();\n  const document = getDocument();\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n    compareWith = $(selector);\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  if (selector === document) {\n    return el === document;\n  }\n\n  if (selector === window) {\n    return el === window;\n  }\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nfunction index() {\n  let child = this[0];\n  let i;\n\n  if (child) {\n    i = 0; // eslint-disable-next-line\n\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n\n    return i;\n  }\n\n  return undefined;\n}\n\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n\n  if (index > length - 1) {\n    return $([]);\n  }\n\n  if (index < 0) {\n    const returnIndex = length + index;\n    if (returnIndex < 0) return $([]);\n    return $([this[returnIndex]]);\n  }\n\n  return $([this[index]]);\n}\n\nfunction append(...els) {\n  let newChild;\n  const document = getDocument();\n\n  for (let k = 0; k < els.length; k += 1) {\n    newChild = els[k];\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\n\nfunction prepend(newChild) {\n  const document = getDocument();\n  let i;\n  let j;\n\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n\n  return this;\n}\n\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\n\nfunction insertBefore(selector) {\n  const before = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\n\nfunction insertAfter(selector) {\n  const after = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\n\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return $([this[0].nextElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n\n    el = next;\n  }\n\n  return $(nextEls);\n}\n\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return $([el.previousElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (el.previousElementSibling) return $([el.previousElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n\n    el = prev;\n  }\n\n  return $(prevEls);\n}\n\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\n\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n\n  return $(parents);\n}\n\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n\n      parent = parent.parentNode;\n    }\n  }\n\n  return $(parents);\n}\n\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n\n  if (typeof selector === 'undefined') {\n    return $([]);\n  }\n\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n\n  return closest;\n}\n\nfunction find(selector) {\n  const foundElements = [];\n\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n\n  return $(foundElements);\n}\n\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].children;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector || $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n\n  return $(children);\n}\n\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n\n  return this;\n}\n\nfunction detach() {\n  return this.remove();\n}\n\nfunction add(...els) {\n  const dom = this;\n  let i;\n  let j;\n\n  for (i = 0; i < els.length; i += 1) {\n    const toAdd = $(els[i]);\n\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom.push(toAdd[j]);\n    }\n  }\n\n  return dom;\n}\n\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n\n      el.textContent = '';\n    }\n  }\n\n  return this;\n}\n\n// eslint-disable-next-line\n\nfunction scrollTo(...args) {\n  const window = getWindow();\n  let [left, top, duration, easing, callback] = args;\n\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n\n  if (typeof easing === 'undefined') easing = 'swing';\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n\n    let scrollLeft; // eslint-disable-line\n\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n\n    if (animateTop) {\n      currentTop = el.scrollTop;\n\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n\n    if (!duration) return;\n\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;\n      let done;\n      if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);\n      if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);\n\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      window.requestAnimationFrame(render);\n    }\n\n    window.requestAnimationFrame(render);\n  });\n} // scrollTop(top, duration, easing, callback) {\n\n\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\n\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\n// eslint-disable-next-line\n\nfunction animate(initialProps, initialParams) {\n  const window = getWindow();\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing' // or 'linear'\n\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n\n    }, initialParams),\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - Math.cos(progress * Math.PI) / 2;\n      }\n\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n\n      return progress;\n    },\n\n    stop() {\n      if (a.frameId) {\n        window.cancelAnimationFrame(a.frameId);\n      }\n\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n\n    done(complete) {\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n\n      const elements = []; // Define & Cache Initials & Units\n\n      a.elements.each((el, index) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n        elements[index] = {\n          container: el\n        };\n        Object.keys(props).forEach(prop => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue\n          };\n        });\n      });\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress; // let el;\n\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n\n        if (startTime === null) {\n          startTime = time;\n        }\n\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);\n        }\n\n        elements.forEach(element => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach(prop => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const {\n              initialValue,\n              finalValue,\n              unit\n            } = el[prop];\n            el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);\n            const currentValue = el[prop].currentValue;\n\n            if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return; // Then call\n\n        a.frameId = window.requestAnimationFrame(render);\n      }\n\n      a.frameId = window.requestAnimationFrame(render);\n      return a;\n    }\n\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = 'resize scroll'.split(' ');\n\nfunction shortcut(name) {\n  function eventHandler(...args) {\n    if (typeof args[0] === 'undefined') {\n      for (let i = 0; i < this.length; i += 1) {\n        if (noTrigger.indexOf(name) < 0) {\n          if (name in this[i]) this[i][name]();else {\n            $(this[i]).trigger(name);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    return this.on(name, ...args);\n  }\n\n  return eventHandler;\n}\n\nconst click = shortcut('click');\nconst blur = shortcut('blur');\nconst focus = shortcut('focus');\nconst focusin = shortcut('focusin');\nconst focusout = shortcut('focusout');\nconst keyup = shortcut('keyup');\nconst keydown = shortcut('keydown');\nconst keypress = shortcut('keypress');\nconst submit = shortcut('submit');\nconst change = shortcut('change');\nconst mousedown = shortcut('mousedown');\nconst mousemove = shortcut('mousemove');\nconst mouseup = shortcut('mouseup');\nconst mouseenter = shortcut('mouseenter');\nconst mouseleave = shortcut('mouseleave');\nconst mouseout = shortcut('mouseout');\nconst mouseover = shortcut('mouseover');\nconst touchstart = shortcut('touchstart');\nconst touchend = shortcut('touchend');\nconst touchmove = shortcut('touchmove');\nconst resize = shortcut('resize');\nconst scroll = shortcut('scroll');\n\nexport default $;\nexport { $, add, addClass, animate, animationEnd, append, appendTo, attr, blur, change, children, click, closest, css, data, dataset, detach, each, empty, eq, filter, find, focus, focusin, focusout, hasClass, height, hide, html, index, insertAfter, insertBefore, is, keydown, keypress, keyup, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, next, nextAll, off, offset, on, once, outerHeight, outerWidth, parent, parents, prepend, prependTo, prev, prevAll, prop, remove, removeAttr, removeClass, removeData, resize, scroll, scrollLeft, scrollTo, scrollTop, show, siblings, stop, styles, submit, text, toggleClass, touchend, touchmove, touchstart, transform, transition, transitionEnd, trigger, val, value, width };\n","import { getWindow } from 'ssr-window';\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {// no getter for object\n    }\n\n    try {\n      delete object[key];\n    } catch (e) {// something got wrong\n    }\n  });\n}\n\nfunction nextTick(callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return setTimeout(callback, delay);\n}\n\nfunction now() {\n  return Date.now();\n}\n\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n\n  if (!style) {\n    style = el.style;\n  }\n\n  return style;\n}\n\nfunction getTranslate(el, axis) {\n  if (axis === void 0) {\n    axis = 'x';\n  }\n\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    } // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n\n\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n\n  return curTransform || 0;\n}\n\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\n\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\n\nfunction extend() {\n  const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n\n  for (let i = 1; i < arguments.length; i += 1) {\n    const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n\n  return to;\n}\n\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\n\nfunction animateCSSModeScroll(_ref) {\n  let {\n    swiper,\n    targetPosition,\n    side\n  } = _ref;\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n\n  const animate = () => {\n    time = new Date().getTime();\n\n    if (startTime === null) {\n      startTime = time;\n    }\n\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n\n  animate();\n}\n\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\n\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n    passiveListener: function checkPassiveListener() {\n      let supportsPassive = false;\n\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          }\n\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {// No support\n      }\n\n      return supportsPassive;\n    }(),\n    gestures: function checkGestures() {\n      return 'ongesturestart' in window;\n    }()\n  };\n}\n\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n\n  return support;\n}\n\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\n\nfunction calcDevice(_temp) {\n  let {\n    userAgent\n  } = _temp === void 0 ? {} : _temp;\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n\n  return deviceCached;\n}\n\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\n\nfunction calcBrowser() {\n  const window = getWindow();\n\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n\n  return {\n    isSafari: isSafari(),\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\n\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n\n  return browser;\n}\n\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize(_ref) {\n  let {\n    swiper,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(_ref2 => {\n          let {\n            contentBoxSize,\n            contentRect,\n            target\n          } = _ref2;\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function Observer(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const observers = [];\n  const window = getWindow();\n\n  const attach = function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n\n  const init = () => {\n    if (!swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    attach(swiper.$wrapperEl[0], {\n      attributes: false\n    });\n  };\n\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n\n    function onceHandler() {\n      self.off(events, onceHandler);\n\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      handler.apply(self, args);\n    }\n\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n\n    return self;\n  },\n\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n\n    return self;\n  },\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n\n  emit() {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","export default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  } // Subtract paddings\n\n\n  width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n  height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n\n  const params = swiper.params;\n  const {\n    $wrapperEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginBottom: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: '',\n    marginTop: ''\n  }); // reset cssMode offsets\n\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\n  }\n\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  } // Calc slides\n\n\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n\n      const slideStyles = getComputedStyle(slide[0]);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide[0];\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (params.setWrapperSize) {\n    $wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }).css({\n      [key]: `${spaceBetween}px`\n    });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.$el.hasClass(backFaceHiddenClass);\n\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.$el.addClass(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.$el.removeClass(backFaceHiddenClass);\n    }\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n    }\n\n    return swiper.slides.eq(index)[0];\n  }; // Find slides currently in view\n\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || $([])).each(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  } // Find new height from highest slide in view\n\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n\n  if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateSlidesProgress(translate) {\n  if (translate === void 0) {\n    translate = this && this.translate || 0;\n  }\n\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate; // Visible Slides\n\n  slides.removeClass(params.slideVisibleClass);\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides.eq(i).addClass(params.slideVisibleClass);\n    }\n\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}","export default function updateProgress(translate) {\n  const swiper = this;\n\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n\n  Object.assign(swiper, {\n    progress,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}","export default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    $wrapperEl,\n    activeIndex,\n    realIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n  let activeSlide;\n\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  } // Active classes\n\n\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n    }\n  } // Next Slide\n\n\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  } // Prev Slide\n\n\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n    }\n\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n    }\n  }\n\n  swiper.emitSlidesClasses();\n}","export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  let slideIndex;\n\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis) {\n  if (axis === void 0) {\n    axis = this.isHorizontal() ? 'x' : 'y';\n  }\n\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    $wrapperEl\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    $wrapperEl,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (translateBounds === void 0) {\n    translateBounds = true;\n  }\n\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit(_ref) {\n  let {\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  } = _ref;\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n\n  swiper.emit(`transition${step}`);\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n\n    swiper.emit(`slideChangeTransition${step}`);\n\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index, speed, runCallbacks, internal, initial) {\n  if (index === void 0) {\n    index = 0;\n  }\n\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (typeof index !== 'number' && typeof index !== 'string') {\n    throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\n  }\n\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n    } // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n\n\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex]; // Update progress\n\n  swiper.updateProgress(translate); // Normalize slideIndex\n\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  } // Directions locks\n\n\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex); // Update Height\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    swiper.updateSlidesClasses();\n\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n\n    return false;\n  }\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._swiperImmediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n\n    swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n    swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n  }\n\n  return true;\n}","export default function slideToLoop(index, speed, runCallbacks, internal) {\n  if (index === void 0) {\n    index = 0;\n  }\n\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n    } // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n\n\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let newIndex = index;\n\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  const {\n    animating,\n    enabled,\n    params\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  const {\n    params,\n    animating,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return swiper;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n\n  let prevIndex = 0;\n\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed, runCallbacks, internal, threshold) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (threshold === void 0) {\n    threshold = 0.5;\n  }\n\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loopCreate() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    $wrapperEl\n  } = swiper; // Remove duplicated slides\n\n  const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;\n  $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  let slides = $selector.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $selector.append(blankNode);\n      }\n\n      slides = $selector.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n\n  if (swiper.loopedSlides > slides.length && swiper.params.loopedSlidesLimit) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((el, index) => {\n    $(el).attr('data-swiper-slide-index', index);\n  });\n\n  for (let i = 0; i < swiper.loopedSlides; i += 1) {\n    const index = i - Math.floor(i / slides.length) * slides.length;\n    appendSlides.push(slides.eq(index)[0]);\n    prependSlides.unshift(slides.eq(slides.length - index - 1)[0]);\n  }\n\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}","export default function loopFix() {\n  const swiper = this;\n  swiper.emit('beforeLoopFix');\n  const {\n    activeIndex,\n    slides,\n    loopedSlides,\n    allowSlidePrev,\n    allowSlideNext,\n    snapGrid,\n    rtlTranslate: rtl\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n  if (activeIndex < loopedSlides) {\n    newIndex = slides.length - loopedSlides * 3 + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params,\n    slides\n  } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n\n  if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nlet dummyEventAttached = false;\n\nfunction dummyEventListener() {}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    touchEvents,\n    el,\n    wrapperEl,\n    device,\n    support\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method; // Touch Events\n\n  if (!support.touch) {\n    el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n    document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n    document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n    el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n      passive: false,\n      capture\n    } : capture);\n    el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n    if (touchEvents.cancel) {\n      el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n    }\n  } // Prevent Links Clicks\n\n\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  } // Resize handler\n\n\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n};\n\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    support\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  if (support.touch && !dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n\n  events(swiper, 'on');\n}\n\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\n\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js'; // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n\nfunction closestElement(selector, base) {\n  if (base === void 0) {\n    base = this;\n  }\n\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n\n    return found || __closestFrom(el.getRootNode().host);\n  }\n\n  return __closestFrom(base);\n}\n\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n    $targetEl = $(event.path[0]);\n  }\n\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n\n    if ($targetEl.is(data.focusableElements)) {\n      preventDefault = false;\n\n      if ($targetEl[0].nodeName === 'SELECT') {\n        data.isTouched = false;\n      }\n    }\n\n    if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n    if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n      e.preventDefault();\n    }\n  }\n\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    return;\n  }\n\n  if (data.isTouchEvent && e.type !== 'touchmove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n\n  if (!swiper.allowTouchMove) {\n    if (!$(e.target).is(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n\n    return;\n  }\n\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n\n  if (!data.startMoving) {\n    return;\n  }\n\n  swiper.allowClick = false;\n\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop && !params.cssMode) {\n      swiper.loopFix();\n    }\n\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n\n    data.allowMomentumBounce = false; // Grab Cursor\n\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n\n    swiper.emit('sliderFirstMove', e);\n  }\n\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n\n  if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  } // Directions locks\n\n\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  } // Threshold\n\n\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  } // Update progress\n\n\n  swiper.updateProgress(data.currentTranslate); // Update translate\n\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  } // Find current slide\n\n\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  } // Find current slide size\n\n\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return; // Breakpoints\n\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  } // Save locks\n\n\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper; // Disable locks on resize\n\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  } // Return locks after resize\n\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  } // eslint-disable-next-line\n\n\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params,\n    $el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n\n    swiper.emitContainerClasses();\n  } // Toggle navigation, pagination, scrollbar\n\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base, containerEl) {\n  if (base === void 0) {\n    base = 'window';\n  }\n\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    $el,\n    device,\n    support\n  } = swiper; // prettier-ignore\n\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'pointer-events': !support.touch\n  }, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  $el.addClass([...classNames].join(' '));\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    $el,\n    classNames\n  } = swiper;\n  $el.removeClass(classNames.join(' '));\n  swiper.emitContainerClasses();\n}","import loadImage from './loadImage.js';\nimport preloadImages from './preloadImages.js';\nexport default {\n  loadImage,\n  preloadImages\n};","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n  const window = getWindow();\n  let image;\n\n  function onReady() {\n    if (callback) callback();\n  }\n\n  const isPicture = $(imageEl).parent('picture')[0];\n\n  if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n\n      if (sizes) {\n        image.sizes = sizes;\n      }\n\n      if (srcset) {\n        image.srcset = srcset;\n      }\n\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}","export default function preloadImages() {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n  }\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\n\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopedSlidesLimit: true,\n  loopFillGroupWithBlank: false,\n  loopPreventsSlide: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import $ from '../../shared/dom.js';\nimport { setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n\n    const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  }\n\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = slidesPerGroup + addSlidesBefore;\n    }\n\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n\n      emit('virtualUpdate');\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n\n          return slidesToRender;\n        }()\n      });\n\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n\n      return;\n    }\n\n    const prependIndexes = [];\n    const appendIndexes = [];\n\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n\n    appendIndexes.forEach(index => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach(index => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  }\n\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n\n    update(true);\n  }\n\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    swiper.virtual.slides = swiper.params.virtual.slides;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function Keyboard(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40; // Directions locks\n\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false; // Check that swiper should be inside of visible area of window\n\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n\n      const $el = swiper.$el;\n      const swiperWidth = $el[0].clientWidth;\n      const swiperHeight = $el[0].clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      if (!inView) return undefined;\n    }\n\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n\n    emit('keyPress', kc);\n    return undefined;\n  }\n\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n    // Legacy\n\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    } // side scrolling on FF with DOMMouseScroll\n\n\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    } // Fall-back if spin cannot be determined\n\n\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    } // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n\n\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    } // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n\n\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    } // If you got here is because an animation has been triggered so store the current time\n\n\n    lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n    return false;\n  }\n\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n\n    return false;\n  }\n\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta; // Get the scroll positions\n\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      }; // Keep the most recent events\n\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      } // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n\n\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        } // Emit event\n\n\n        if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay\n\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n\n  function events(method) {\n    let target = swiper.$el;\n\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n\n    target[method]('mouseenter', handleMouseEnter);\n    target[method]('mouseleave', handleMouseLeave);\n    target[method]('wheel', handle);\n  }\n\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n\n    if (swiper.mousewheel.enabled) return false;\n    events('on');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n\n    if (!swiper.mousewheel.enabled) return false;\n    events('off');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport $ from '../../shared/dom.js';\nexport default function Navigation(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    $nextEl: null,\n    prevEl: null,\n    $prevEl: null\n  };\n\n  function getEl(el) {\n    let $el;\n\n    if (el) {\n      $el = $(el);\n\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\n        $el = swiper.$el.find(el);\n      }\n    }\n\n    return $el;\n  }\n\n  function toggleEl($el, disabled) {\n    const params = swiper.params.navigation;\n\n    if ($el && $el.length > 0) {\n      $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\n      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n  }\n\n  function update() {\n    // Update Navigation Buttons\n    if (swiper.params.loop) return;\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n    toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    const $nextEl = getEl(params.nextEl);\n    const $prevEl = getEl(params.prevEl);\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', onNextClick);\n    }\n\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', onPrevClick);\n    }\n\n    Object.assign(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0]\n    });\n\n    if (!swiper.enabled) {\n      if ($nextEl) $nextEl.addClass(params.lockClass);\n      if ($prevEl) $prevEl.addClass(params.lockClass);\n    }\n  }\n\n  function destroy() {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  }\n\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($nextEl) {\n      $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n\n    if ($prevEl) {\n      $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n  });\n  on('click', (_s, e) => {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n    const targetEl = e.target;\n\n    if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n\n      if ($nextEl) {\n        isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n      } else if ($prevEl) {\n        isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n      }\n\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n\n      if ($nextEl) {\n        $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n\n      if ($prevEl) {\n        $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    }\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);\n    init();\n    update();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);\n    destroy();\n  };\n\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { getDocument } from 'ssr-window';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  const document = getDocument();\n\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = swiper.$el.children(`.${checkProps[key]}`)[0];\n\n        if (!element) {\n          element = document.createElement('div');\n          element.className = checkProps[key];\n          swiper.$el.append(element);\n        }\n\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n\n  return params;\n}","import $ from '../../shared/dom.js';\nimport classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Pagination(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    $el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\n  }\n\n  function setSideBullets($bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\n  }\n\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el; // Current/Total\n\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n      if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n        current -= slidesLength - swiper.loopedSlides * 2;\n      }\n\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    } // Types\n\n\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n\n      if (params.dynamicBullets) {\n        bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\n\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);\n\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n\n      bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\n\n      if ($el.length > 1) {\n        bullets.each(bullet => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n\n            if (bulletIndex === firstIndex) {\n              setSideBullets($bullet, 'prev');\n            }\n\n            if (bulletIndex === lastIndex) {\n              setSideBullets($bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              setSideBullets($firstDisplayedBullet, 'prev');\n              setSideBullets($lastDisplayedBullet, 'next');\n            }\n          } else {\n            setSideBullets($firstDisplayedBullet, 'prev');\n            setSideBullets($lastDisplayedBullet, 'next');\n          }\n        }\n      }\n\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n\n    if (params.type === 'fraction') {\n      $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n      $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n    }\n\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n\n      $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      emit('paginationRender', $el[0]);\n    } else {\n      emit('paginationUpdate', $el[0]);\n    }\n\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  }\n\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n    }\n\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n\n      $el.html(paginationHTML);\n    }\n\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n\n      $el.html(paginationHTML);\n    }\n\n    if (params.type !== 'custom') {\n      emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  }\n\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n      $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\n\n      if ($el.length > 1) {\n        $el = $el.filter(el => {\n          if ($(el).parents('.swiper')[0] !== swiper.el) return false;\n          return true;\n        });\n      }\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n    $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      dynamicBulletIndex = 0;\n\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Object.assign(swiper.pagination, {\n      $el,\n      el: $el[0]\n    });\n\n    if (!swiper.enabled) {\n      $el.addClass(params.lockClass);\n    }\n  }\n\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const $el = swiper.pagination.$el;\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n    if (params.clickable) {\n      $el.off('click', classesToSelector(params.bulletClass));\n    }\n  }\n\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (swiper.params.loop) {\n      update();\n    } else if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    if (!swiper.params.loop) {\n      update();\n    }\n  });\n  on('slidesLengthChange', () => {\n    if (swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('snapGridLengthChange', () => {\n    if (!swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const {\n      $el\n    } = swiper.pagination;\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const {\n      $el\n    } = swiper.pagination;\n\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n\n      $el.toggleClass(swiper.params.pagination.hiddenClass);\n    }\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n\n    if (swiper.pagination.$el) {\n      swiper.pagination.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n    }\n\n    init();\n    render();\n    update();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n\n    if (swiper.pagination.$el) {\n      swiper.pagination.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n    }\n\n    destroy();\n  };\n\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n\n  return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null,\n    $el: null,\n    $dragEl: null\n  };\n\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl,\n      progress\n    } = swiper;\n    const {\n      $dragEl,\n      $el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n\n    if (rtl) {\n      newPos = -newPos;\n\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n\n    if (params.hide) {\n      clearTimeout(timeout);\n      $el[0].style.opacity = 1;\n      timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  }\n\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  }\n\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      $dragEl,\n      $el\n    } = scrollbar;\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    }\n  }\n\n  function getPointerPosition(e) {\n    if (swiper.isHorizontal()) {\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n    }\n\n    return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n  }\n\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      $el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el,\n      $dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    $el.transition(0);\n\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n\n    emit('scrollbarDragStart', e);\n  }\n\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el,\n      $dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    emit('scrollbarDragMove', e);\n  }\n\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n\n    emit('scrollbarDragEnd', e);\n\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n\n  function events(method) {\n    const {\n      scrollbar,\n      touchEventsTouch,\n      touchEventsDesktop,\n      params,\n      support\n    } = swiper;\n    const $el = scrollbar.$el;\n    if (!$el) return;\n    const target = $el[0];\n    const activeListener = support.passiveListener && params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = support.passiveListener && params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n\n    if (!support.touch) {\n      target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\n      document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\n      document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\n    } else {\n      target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\n      target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\n      target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\n    }\n  }\n\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n\n  function init() {\n    const {\n      scrollbar,\n      $el: $swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let $el = $(params.el);\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Object.assign(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0]\n    });\n\n    if (params.draggable) {\n      enableDraggable();\n    }\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  }\n\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const $el = swiper.scrollbar.$el;\n\n    if ($el) {\n      $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n\n    disableDraggable();\n  }\n\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      $el\n    } = swiper.scrollbar;\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\n\n    if (swiper.scrollbar.$el) {\n      swiper.scrollbar.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n\n    init();\n    updateSize();\n    setTranslate();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\n\n    if (swiper.scrollbar.$el) {\n      swiper.scrollbar.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n\n    destroy();\n  };\n\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import $ from '../../shared/dom.js';\nexport default function Parallax(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n      setTransform(el, progress);\n    });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, slideProgress);\n      });\n    });\n  };\n\n  const setTransition = function (duration) {\n    if (duration === void 0) {\n      duration = swiper.params.speed;\n    }\n\n    const {\n      $el\n    } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n      const $parallaxEl = $(parallaxEl);\n      let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      $parallaxEl.transition(parallaxDuration);\n    });\n  };\n\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { getTranslate } from '../../shared/utils.js';\nexport default function Zoom(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let gesturesEnabled;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const gesture = {\n    $slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    $imageEl: undefined,\n    $imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n        const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n\n      scale = value;\n    }\n\n  });\n\n  function getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  } // Events\n\n\n  function onGestureStart(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n\n    if (!support.gestures) {\n      if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n        return;\n      }\n\n      fakeGestureTouched = true;\n      gesture.scaleStart = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n\n    isScaling = true;\n  }\n\n  function onGestureChange(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n\n    if (!support.gestures) {\n      if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n        return;\n      }\n\n      fakeGestureMoved = true;\n      gesture.scaleMove = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n      if (e.type === 'gesturechange') onGestureStart(e);\n      return;\n    }\n\n    if (support.gestures) {\n      zoom.scale = e.scale * currentScale;\n    } else {\n      zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    }\n\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n\n  function onGestureEnd(e) {\n    const device = swiper.device;\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n\n    if (!support.gestures) {\n      if (!fakeGestureTouched || !fakeGestureMoved) {\n        return;\n      }\n\n      if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n        return;\n      }\n\n      fakeGestureTouched = false;\n      fakeGestureMoved = false;\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  }\n\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  }\n\n  function onTouchMove(e) {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n    } // Define if we need image drag\n\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n\n    e.stopPropagation();\n    image.isMoved = true;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    } // Velocity\n\n\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY; // Define if we need image drag\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  }\n\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (e && e.target) {\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      }\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left + window.scrollX;\n      offsetY = gesture.$slideEl.offset().top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  } // Toggle Zoom\n\n\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n\n  function getListeners() {\n    const support = swiper.support;\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = support.passiveListener ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  function getSlideSelector() {\n    return `.${swiper.params.slideClass}`;\n  }\n\n  function toggleGestures(method) {\n    const {\n      passiveListener\n    } = getListeners();\n    const slideSelector = getSlideSelector();\n    swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\n    swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\n    swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\n  }\n\n  function enableGestures() {\n    if (gesturesEnabled) return;\n    gesturesEnabled = true;\n    toggleGestures('on');\n  }\n\n  function disableGestures() {\n    if (!gesturesEnabled) return;\n    gesturesEnabled = false;\n    toggleGestures('off');\n  } // Attach/Detach Events\n\n\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const support = swiper.support;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n    const slideSelector = getSlideSelector(); // Scale image\n\n    if (support.gestures) {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n      }\n    } // Move image\n\n\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n  }\n\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    const support = swiper.support;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n    const slideSelector = getSlideSelector(); // Scale image\n\n    if (support.gestures) {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n      }\n    } // Move image\n\n\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n  }\n\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function Lazy(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    lazy: {\n      checkInView: false,\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n      scrollingElement: '',\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader'\n    }\n  });\n  swiper.lazy = {};\n  let scrollHandlerAttached = false;\n  let initialImageLoaded = false;\n\n  function loadInSlide(index, loadInDuplicate) {\n    if (loadInDuplicate === void 0) {\n      loadInDuplicate = true;\n    }\n\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`) : swiper.slides.eq(index);\n    const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images.push($slideEl[0]);\n    }\n\n    if ($images.length === 0) return;\n    $images.each(imageEl => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n      const $pictureEl = $imageEl.parent('picture');\n      swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n\n          if ($pictureEl.length) {\n            $pictureEl.children('source').each(sourceEl => {\n              const $source = $(sourceEl);\n\n              if ($source.attr('data-srcset')) {\n                $source.attr('srcset', $source.attr('data-srcset'));\n                $source.removeAttr('data-srcset');\n              }\n            });\n          }\n\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n\n        emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n      emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  }\n\n  function load() {\n    const {\n      $wrapperEl,\n      params: swiperParams,\n      slides,\n      activeIndex\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n    let slidesPerView = swiperParams.slidesPerView;\n\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n\n      return false;\n    }\n\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n\n      return $(slideEl).index();\n    }\n\n    if (!initialImageLoaded) initialImageLoaded = true;\n\n    if (swiper.params.watchSlidesProgress) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) loadInSlide(i);\n      }\n    } else {\n      loadInSlide(activeIndex);\n    }\n\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n        const amount = params.loadPrevNextAmount;\n        const spv = Math.ceil(slidesPerView);\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n        for (let i = activeIndex + spv; i < maxIndex; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        } // Prev Slides\n\n\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  }\n\n  function checkInViewOnLoad() {\n    const window = getWindow();\n    if (!swiper || swiper.destroyed) return;\n    const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n    const isWindow = $scrollElement[0] === window;\n    const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n    const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n    const swiperOffset = swiper.$el.offset();\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let inView = false;\n    if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n    const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n    for (let i = 0; i < swiperCoord.length; i += 1) {\n      const point = swiperCoord[i];\n\n      if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n        if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n        inView = true;\n      }\n    }\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n\n    if (inView) {\n      load();\n      $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\n    } else if (!scrollHandlerAttached) {\n      scrollHandlerAttached = true;\n      $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\n    }\n  }\n\n  on('beforeInit', () => {\n    if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n      swiper.params.preloadImages = false;\n    }\n  });\n  on('init', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('scroll', () => {\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {\n      load();\n    }\n  });\n  on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('transitionStart', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('slideChange', () => {\n    const {\n      lazy,\n      cssMode,\n      watchSlidesProgress,\n      touchReleaseOnEdges,\n      resistanceRatio\n    } = swiper.params;\n\n    if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {\n      load();\n    }\n  });\n  on('destroy', () => {\n    if (!swiper.$el) return;\n    swiper.$el.find(`.${swiper.params.lazy.loadingClass}`).removeClass(swiper.params.lazy.loadingClass);\n  });\n  Object.assign(swiper.lazy, {\n    load,\n    loadInSlide\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { nextTick } from '../../shared/utils.js';\nexport default function Controller(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n\n    }\n  });\n  swiper.controller = {\n    control: undefined\n  };\n\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n\n        return maxIndex;\n      };\n    }();\n\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n\n    return this;\n  } // xxx: for now i will just save one spline function to to\n\n\n  function getInterpolateFunction(c) {\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  }\n\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n\n      if (duration !== 0) {\n        c.transitionStart();\n\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n\n          c.transitionEnd();\n        });\n      }\n    }\n\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n\n  on('beforeInit', () => {\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport $ from '../../shared/dom.js';\nexport default function A11y(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  let liveRegion = null;\n\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  }\n\n  function getRandomNumber(size) {\n    if (size === void 0) {\n      size = 16;\n    }\n\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n\n  function makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n  }\n\n  function makeElNotFocusable($el) {\n    $el.attr('tabIndex', '-1');\n  }\n\n  function addElRole($el, role) {\n    $el.attr('role', role);\n  }\n\n  function addElRoleDescription($el, description) {\n    $el.attr('aria-roledescription', description);\n  }\n\n  function addElControls($el, controls) {\n    $el.attr('aria-controls', controls);\n  }\n\n  function addElLabel($el, label) {\n    $el.attr('aria-label', label);\n  }\n\n  function addElId($el, id) {\n    $el.attr('id', id);\n  }\n\n  function addElLive($el, live) {\n    $el.attr('aria-live', live);\n  }\n\n  function disableEl($el) {\n    $el.attr('aria-disabled', true);\n  }\n\n  function enableEl($el) {\n    $el.attr('aria-disabled', false);\n  }\n\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const $targetEl = $(e.target);\n\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n\n    if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n      $targetEl[0].click();\n    }\n  }\n\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        disableEl($prevEl);\n        makeElNotFocusable($prevEl);\n      } else {\n        enableEl($prevEl);\n        makeElFocusable($prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        disableEl($nextEl);\n        makeElNotFocusable($nextEl);\n      } else {\n        enableEl($nextEl);\n        makeElFocusable($nextEl);\n      }\n    }\n  }\n\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.each(bulletEl => {\n      const $bulletEl = $(bulletEl);\n\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable($bulletEl);\n\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole($bulletEl, 'button');\n          addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n        }\n      }\n\n      if ($bulletEl.is(`.${swiper.params.pagination.bulletActiveClass}`)) {\n        $bulletEl.attr('aria-current', 'true');\n      } else {\n        $bulletEl.removeAttr('aria-current');\n      }\n    });\n  }\n\n  const initNavEl = ($el, wrapperId, message) => {\n    makeElFocusable($el);\n\n    if ($el[0].tagName !== 'BUTTON') {\n      addElRole($el, 'button');\n      $el.on('keydown', onEnterOrSpaceKey);\n    }\n\n    addElLabel($el, message);\n    addElControls($el, wrapperId);\n  };\n\n  const handleFocus = e => {\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n    }\n\n    if (params.slideRole) {\n      addElRole($(swiper.slides), params.slideRole);\n    }\n\n    const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;\n\n    if (params.slideLabelMessage) {\n      swiper.slides.each((slideEl, index) => {\n        const $slideEl = $(slideEl);\n        const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel($slideEl, ariaLabelMessage);\n      });\n    }\n  };\n\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.$el.append(liveRegion); // Container\n\n    const $containerEl = swiper.$el;\n\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n    }\n\n    if (params.containerMessage) {\n      addElLabel($containerEl, params.containerMessage);\n    } // Wrapper\n\n\n    const $wrapperEl = swiper.$wrapperEl;\n    const wrapperId = params.id || $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId($wrapperEl, wrapperId);\n    addElLive($wrapperEl, live); // Slide\n\n    initSlides(); // Navigation\n\n    let $nextEl;\n    let $prevEl;\n\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n\n    if ($nextEl && $nextEl.length) {\n      initNavEl($nextEl, wrapperId, params.nextSlideMessage);\n    }\n\n    if ($prevEl && $prevEl.length) {\n      initNavEl($prevEl, wrapperId, params.prevSlideMessage);\n    } // Pagination\n\n\n    if (hasClickablePagination()) {\n      swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n    } // Tab focus\n\n\n    swiper.$el.on('focus', handleFocus, true);\n  };\n\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let $nextEl;\n    let $prevEl;\n\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n\n    if ($nextEl) {\n      $nextEl.off('keydown', onEnterOrSpaceKey);\n    }\n\n    if ($prevEl) {\n      $prevEl.off('keydown', onEnterOrSpaceKey);\n    } // Pagination\n\n\n    if (hasClickablePagination()) {\n      swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n    } // Tab focus\n\n\n    swiper.$el.off('focus', handleFocus, true);\n  }\n\n  on('beforeInit', () => {\n    liveRegion = $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`);\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n\n    const slide = swiper.slides.eq(index);\n    let value = slugify(slide.attr('data-history'));\n\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key}/${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n\n    const currentState = window.history.state;\n\n    if (currentState && currentState.value === value) {\n      return;\n    }\n\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = slugify(slide.attr('data-history'));\n\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) return;\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  const destroy = () => {\n    const window = getWindow();\n\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function HashNavigation(_ref) {\n  let {\n    swiper,\n    extendParams,\n    emit,\n    on\n  } = _ref;\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false\n    }\n  });\n\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');\n      emit('hashSet');\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n      emit('hashSet');\n    }\n  };\n\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n\n    if (hash) {\n      const speed = 0;\n\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', onHashChange);\n    }\n  };\n\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', onHashChange);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { nextTick } from '../../shared/utils.js';\nexport default function Autoplay(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  let timeout;\n  swiper.autoplay = {\n    running: false,\n    paused: false\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n\n  function run() {\n    if (!swiper.size) {\n      swiper.autoplay.running = false;\n      swiper.autoplay.paused = false;\n      return;\n    }\n\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n\n    clearTimeout(timeout);\n    timeout = nextTick(() => {\n      let autoplayResult;\n\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          emit('autoplay');\n        } else {\n          stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.isEnd) {\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n        emit('autoplay');\n      } else {\n        stop();\n      }\n\n      if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {\n        run();\n      }\n    }, delay);\n  }\n\n  function start() {\n    if (typeof timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    emit('autoplayStart');\n    run();\n    return true;\n  }\n\n  function stop() {\n    if (!swiper.autoplay.running) return false;\n    if (typeof timeout === 'undefined') return false;\n\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = undefined;\n    }\n\n    swiper.autoplay.running = false;\n    emit('autoplayStop');\n    return true;\n  }\n\n  function pause(speed) {\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (timeout) clearTimeout(timeout);\n    swiper.autoplay.paused = true;\n\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      run();\n    } else {\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n        swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n      });\n    }\n  }\n\n  function onVisibilityChange() {\n    const document = getDocument();\n\n    if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n      pause();\n    }\n\n    if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n      run();\n      swiper.autoplay.paused = false;\n    }\n  }\n\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n    if (e.target !== swiper.$wrapperEl[0]) return;\n    ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n    swiper.autoplay.paused = false;\n\n    if (!swiper.autoplay.running) {\n      stop();\n    } else {\n      run();\n    }\n  }\n\n  function onMouseEnter() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n    } else {\n      emit('autoplayPause');\n      pause();\n    }\n\n    ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n  }\n\n  function onMouseLeave() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      return;\n    }\n\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n    run();\n  }\n\n  function attachMouseEvents() {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.$el.on('mouseenter', onMouseEnter);\n      swiper.$el.on('mouseleave', onMouseLeave);\n    }\n  }\n\n  function detachMouseEvents() {\n    swiper.$el.off('mouseenter', onMouseEnter);\n    swiper.$el.off('mouseleave', onMouseLeave);\n  }\n\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      start();\n      const document = getDocument();\n      document.addEventListener('visibilitychange', onVisibilityChange);\n      attachMouseEvents();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.autoplay.running) {\n      if (internal || !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.pause(speed);\n      } else {\n        stop();\n      }\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.autoplay.running) {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        stop();\n      } else {\n        pause();\n      }\n    }\n  });\n  on('touchEnd', () => {\n    if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n      run();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n\n    if (swiper.autoplay.running) {\n      stop();\n    }\n\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  });\n  Object.assign(swiper.autoplay, {\n    pause,\n    run,\n    start,\n    stop\n  });\n}","import { isObject } from '../../shared/utils.js';\nimport $ from '../../shared/dom.js';\nexport default function Thumb(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix(); // eslint-disable-next-line\n\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n    }\n\n    swiper.slideTo(slideToIndex);\n  }\n\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView; // Activate thumbs\n\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        } // Find actual thumbs index to slide to\n\n\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n\n        if (typeof prevThumbsIndex === 'undefined') {\n          newThumbsIndex = nextThumbsIndex;\n        } else if (typeof nextThumbsIndex === 'undefined') {\n          newThumbsIndex = prevThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = nextThumbsIndex;\n        } else {\n          newThumbsIndex = prevThumbsIndex;\n        }\n\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {// newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    init();\n    update(true);\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { now } from '../../shared/utils.js';\nexport default function freeMode(_ref) {\n  let {\n    swiper,\n    extendParams,\n    emit,\n    once\n  } = _ref;\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper; // Velocity\n\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n\n  function onTouchEnd(_ref2) {\n    let {\n      currentPos\n    } = _ref2;\n    const {\n      params,\n      $wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper; // Time diff\n\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n\n      return;\n    }\n\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        } // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n\n\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n\n        newPosition = -newPosition;\n      }\n\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      } // Fix duration\n\n\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation(_ref) {\n  let {\n    swiper\n  } = _ref;\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params\n  } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl,\n    activeIndex\n  } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n\n  let newActiveIndex = activeIndex + 1;\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n\n  const baseLength = swiper.slides.length;\n\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFade(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    fadeEffect: {\n      crossFade: false,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.css({\n        opacity: slideOpacity\n      }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.fadeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return; // remove shadows\n\n      swiper.slides.each(slideEl => {\n        const $slideEl = swiper.$(slideEl);\n        $slideEl.find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').remove();\n      }); // create new one\n\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","export default function effectTarget(effectParams, $slideEl) {\n  if (effectParams.transformEl) {\n    return $slideEl.find(effectParams.transformEl).css({\n      'backface-visibility': 'hidden',\n      '-webkit-backface-visibility': 'hidden'\n    });\n  }\n\n  return $slideEl;\n}","export default function effectVirtualTransitionEnd(_ref) {\n  let {\n    swiper,\n    duration,\n    transformEl,\n    allSlides\n  } = _ref;\n  const {\n    slides,\n    activeIndex,\n    $wrapperEl\n  } = swiper;\n\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let $transitionEndTarget;\n\n    if (allSlides) {\n      $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\n    } else {\n      $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\n    }\n\n    $transitionEndTarget.transitionEnd(() => {\n      if (eventTriggered) return;\n      if (!swiper || swiper.destroyed) return;\n      eventTriggered = true;\n      swiper.animating = false;\n      const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n      for (let i = 0; i < triggerEvents.length; i += 1) {\n        $wrapperEl.trigger(triggerEvents[i]);\n      }\n    });\n  }\n}","import $ from '../../shared/dom.js';\nimport effectInit from '../../shared/effect-init.js';\nexport default function EffectCube(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n\n  const createSlideShadows = ($slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n    if (shadowBefore.length === 0) {\n      shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n      $slideEl.append(shadowBefore);\n    }\n\n    if (shadowAfter.length === 0) {\n      shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n      $slideEl.append(shadowAfter);\n    }\n\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.each(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows($(slideEl), progress, isHorizontal);\n    });\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      $wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n\n        $cubeShadowEl.css({\n          height: `${swiperWidth}px`\n        });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n\n      $slideEl.transform(transform);\n\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, isHorizontal);\n      }\n    }\n\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n\n    const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n    $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n    $wrapperEl[0].style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n\n  const setTransition = duration => {\n    const {\n      $el,\n      slides\n    } = swiper;\n    slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  };\n\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import $ from '../../shared/dom.js';\nimport createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFlip(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n      transformEl: null\n    }\n  });\n\n  const createSlideShadows = ($slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n    if (shadowBefore.length === 0) {\n      shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n\n    if (shadowAfter.length === 0) {\n      shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.each(slideEl => {\n      const $slideEl = $(slideEl);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n\n      createSlideShadows($slideEl, progress, params);\n    });\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, params);\n      }\n\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.flipEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import $ from './dom.js';\nexport default function createShadow(params, $slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\n  let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\n\n  if (!$shadowEl.length) {\n    $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\n    $shadowContainer.append($shadowEl);\n  }\n\n  return $shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nexport default function EffectCoverflow(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth; // Each slide offset from center\n\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n        }\n\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.coverflowEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n  };\n\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCreative(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    creativeEffect: {\n      transformEl: null,\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      $wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      } // set translate\n\n\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      }); // set rotates\n\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\n\n      if (custom && data.shadow || !custom) {\n        let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0 && data.shadow) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform).css({\n        opacity: opacityString\n      });\n\n      if (data.origin) {\n        $targetEl.css('transform-origin', data.origin);\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.creativeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n      rotate: true\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -2 * progress;\n      let tXAdd = 8 - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","  // core version + navigation, pagination modules:\n  import Swiper, { Pagination } from 'swiper';\n  // import Swiper and modules styles\n  import 'swiper/swiper.min.css';\n\nconst customerReviewSwiper = document.querySelector('.mySwiper');\n\nconst swiper = new Swiper(customerReviewSwiper, {\n  modules: [Pagination],\n\n  loop: true,\n\n  // If we need pagination\n  pagination: {\n    el: '.swiper-pagination',\n  },\n\n  // Navigation arrows\n  // navigation: {\n  //   nextEl: '.swiper-button-next',\n  //   prevEl: '.swiper-button-prev',\n  // },\n\n});\n"],"names":["parcelRequire","$7xxPi","$d3aa16e5c5539775$var$prototypes","$mPJF1","default","$jEOyI","$4HaqR","$b4Co2","$jtnqo","$7Q6KL","$lt8Bz","$i1StC","$6Vw97","$5rbog","$5IPB6","$cbWiI","$d3aa16e5c5539775$var$extendedDefaults","$d3aa16e5c5539775$var$Swiper","enable","swiper","this","enabled","params","grabCursor","setGrabCursor","emit","disable","unsetGrabCursor","setProgress","progress","speed","Math","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","el","cls","className","split","filter","indexOf","containerModifierClass","join","getSlideClasses","slideEl","destroyed","slideClass","emitSlidesClasses","updates","slides","each","classNames","push","slidesPerViewDynamic","view","exact","slidesGrid","slidesSizesGrid","size","swiperSize","activeIndex","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i","length","i1","i2","update","snapGrid","setTranslate","translateValue","rtlTranslate","translate","newTranslate","translated","breakpoints","setBreakpoint","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","slidesPerView","isEnd","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","direction","$el","removeClass","addClass","style","width","height","changeLanguageDirection","rtl","dir","mount","mounted","$3ORMQ","getWrapperSelector","wrapperClass","trim","$wrapperEl","shadowRoot","querySelector","res","children","options","getWrapper","createElements","wrapper","getDocument","createElement","append","Object","assign","wrapperEl","toLowerCase","css","wrongRTL","init","initialized","addClasses","loop","loopCreate","preloadImages","initialSlide","loopedSlides","runCallbacksOnInit","attachEvents","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttr","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","keys","eventsListeners","forEach","eventName","off","$dNWnP","deleteProps","static","newDefaults","extend","extendedDefaults","defaults","$1AMhv","mod","prototype","__modules__","modules","module","Array","isArray","m","installModule","constructor","_len","arguments","args","_key","toString","call","slice","swipers","containerEl","newParams","__swiper__","support","$1gHsq","getSupport","device","$agupX","getDevice","userAgent","browser","$kMnIR","getBrowser","eventsAnyListeners","allModulesParams","extendParams","$kmZuC","on","bind","once","swiperParams","originalParams","passedParams","onAny","$","isHorizontal","isVertical","realIndex","isBeginning","previousTranslate","velocity","animating","allowSlideNext","allowSlidePrev","touchEvents","touch","desktop","touchEventsTouch","start","move","end","cancel","touchEventsDesktop","simulateTouch","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","now","clickTimeout","velocities","allowMomentumBounce","isTouchEvent","startMoving","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","prototypeGroup","protoMethod","use","$kdpim","$c4Sz9","$d3aa16e5c5539775$export$2e2bcd8739ae039","$57d5daab652ed4f7$var$isObject","obj","$57d5daab652ed4f7$export$8b58be045bf06082","target","src","key","$57d5daab652ed4f7$export$3fdcb9b4d81368d8","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelectorAll","getElementById","createEvent","initEvent","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$57d5daab652ed4f7$export$f65ca476c09acec0","doc","document","$57d5daab652ed4f7$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","$57d5daab652ed4f7$export$38b2d434cce3ea22","win","window","$47KZ9","$2c7fc3867f67b810$var$Methods","hasClass","toggleClass","attr","transform","transition","trigger","transitionEnd","outerWidth","outerHeight","styles","offset","html","text","is","index","eq","prepend","next","nextAll","prev","prevAll","parent","parents","closest","find","remove","methodName","defineProperty","fn","value","writable","$2c7fc3867f67b810$export$2e2bcd8739ae039","$300c432eac763621$var$Dom7","items","super","proto","__proto__","get","set","value1","$300c432eac763621$var$makeReactive","$300c432eac763621$var$arrayFlat","arr","$300c432eac763621$var$arrayFilter","$300c432eac763621$export$3d8c2f653ac9d0b9","selector","context","getWindow","html1","toCreate","tempParent","innerHTML","a","$300c432eac763621$var$qsa","nodeType","uniqueArray","$300c432eac763621$var$arrayUnique","$300c432eac763621$export$d2cf6cd1dc7067d3","classes","map","c","classList","add","$300c432eac763621$export$c2255604a80b4506","$300c432eac763621$export$4a80062ca50b57c7","toggle","$300c432eac763621$export$4ea3d958472af68f","contains","$300c432eac763621$export$7aabe8b3a840d2fd","attrs","value2","getAttribute","attrName","$300c432eac763621$export$842f2b51efdcb631","attr1","removeAttribute","$300c432eac763621$export$51186ad6e864892a","transform1","$300c432eac763621$export$66bb15e2994e6a26","duration","transitionDuration","$300c432eac763621$export$af631764ddc44097","eventType","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","apply","parents1","k","handleEvent","events","j","event","dom7LiveListeners","proxyListener","dom7Listeners","$300c432eac763621$export$8c8705df4a2dcec9","handlers","handler","dom7proxy","splice","$300c432eac763621$export$e614dc9140f7ae71","evt","detail","bubbles","cancelable","data","dataIndex","dispatchEvent","$300c432eac763621$export$358dc01d65cad417","dom","fireCallBack","$300c432eac763621$export$e823f88e4111159a","includeMargins","styles1","offsetWidth","parseFloat","$300c432eac763621$export$fc5b8aac72846d1e","styles2","offsetHeight","$300c432eac763621$export$cc800923e997bb8","box","getBoundingClientRect","clientTop","clientLeft","scrollTop1","scrollY","scrollTop","scrollLeft1","scrollX","scrollLeft","top","left","$300c432eac763621$export$9dd6ff9ea0189349","$300c432eac763621$export$dbf350e5966cf602","props","value7","prop1","$300c432eac763621$export$79b2f7037acddd43","index1","$300c432eac763621$export$3dea766d36a8935f","$300c432eac763621$export$c0bb0b647f701bb5","html2","$300c432eac763621$export$6f093cfa640b7166","text1","textContent","$300c432eac763621$export$226b3eccf92c9ed9","compareWith","matches","webkitMatchesSelector","msMatchesSelector","$300c432eac763621$export$b610b8812bbcded9","child","previousSibling","$300c432eac763621$export$9663ddc1cf085b32","index2","returnIndex","$300c432eac763621$export$10d8903dec122b9d","els","newChild","tempDiv","firstChild","appendChild","$300c432eac763621$export$68159836694e22c1","insertBefore","$300c432eac763621$export$48cfd1e771a65c4f","nextElementSibling","$300c432eac763621$export$3cd99760d81ede63","nextEls","next1","$300c432eac763621$export$232faf9add678146","previousElementSibling","$300c432eac763621$export$5a01ccd45552d0b4","prevEls","prev1","$300c432eac763621$export$91124bb58bc04465","parents2","parentNode","$300c432eac763621$export$7901f6cd558b9a93","parents3","parent3","$300c432eac763621$export$ff7f7c97cdce86e","closest1","$300c432eac763621$export$71aa6c912b956294","foundElements","found","$300c432eac763621$export$bacb5cc5a11aef16","children1","$300c432eac763621$export$cd7f480d6b8286c3","removeChild","$300c432eac763621$var$noTrigger","$300c432eac763621$var$shortcut","name","$a0cd23a932383e06$export$8694e5c03a4df8e6","object","e1","$a0cd23a932383e06$export$bdd553fddd433dcb","delay","$a0cd23a932383e06$export$461939dd4422153","$a0cd23a932383e06$export$5ec402b7fcf74398","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","$a0cd23a932383e06$export$3735103072e4a80","WebKitCSSMatrix","webkitTransform","replace","MozTransform","OTransform","MsTransform","msTransform","m41","m42","$a0cd23a932383e06$export$a6cdc56e425d0d0a","o","$a0cd23a932383e06$var$isNode","node","HTMLElement","$a0cd23a932383e06$export$8b58be045bf06082","to","noExtend","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$a0cd23a932383e06$export$a607267f322101fd","varName","varValue","setProperty","$a0cd23a932383e06$export$a5dd2b4b1a116d6d","_ref","targetPosition","side","startPosition","time","startTime","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$0ec8fed4d94b7d0e$var$support","$0ec8fed4d94b7d0e$export$d61c7b85ff180578","smoothScroll","documentElement","DocumentTouch","passiveListener","supportsPassive","opts","gestures","$0ec8fed4d94b7d0e$var$calcSupport","$7792fe51e58fd98a$var$deviceCached","$7792fe51e58fd98a$export$30c823bc834d6ab4","overrides","_temp","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$7792fe51e58fd98a$var$calcDevice","$f20ab12260e3c8aa$var$browser","$f20ab12260e3c8aa$export$89e15fc796a4a429","isSafari","isWebView","test","$f20ab12260e3c8aa$var$calcBrowser","$eb78a4a6fe62148c$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","_ref2","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$8cb02f6e7ce8fb4d$export$2e2bcd8739ae039","observers","attach","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","disconnect","$044a2fc60b096a26$export$2e2bcd8739ae039","priority","self","method","onceHandler","__emitterProxy","offAny","eventHandler","_len2","_key2","$2nlfG","$e4f8f8ad9cb19e91$export$2e2bcd8739ae039","$aafDk","$jMtU7","$kPOBn","$8OSjY","$hBtS3","$29hok","$lCVGa","$3EEt9","$1bae36ef23f50f9c$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","Number","isNaN","$7666f706306747b4$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","virtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$e669b25e9df72d3e$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","ceil","$f2afd2868f8e8bc2$export$2e2bcd8739ae039","swiperSlideOffset","offsetLeft","offsetTop","$66bd21459a070ee6$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$cd0d10153bc4aa64$export$2e2bcd8739ae039","multiplier","translatesDiff","wasBeginning","wasEnd","updateSlidesProgress","$1909e99c7f96a783$export$2e2bcd8739ae039","activeSlide","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","$fbe9e371bf7fd468$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","$2a947fda846258ea$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1umi3","$36b34534f351ba31$export$2e2bcd8739ae039","$1vvVW","$jVKXc","$a9I2T","$fzQVA","$1159e22d2ec30d20$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$119175075d742233$export$2e2bcd8739ae039","byController","x","y","newProgress","$03be93aa6759504c$export$2e2bcd8739ae039","$764ce935999ac3a7$export$2e2bcd8739ae039","$b5732e441af1da9c$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$e2mnO","$80fdd84039bf9f36$export$2e2bcd8739ae039","$C1QMZ","$3QxHx","$a3829d6301edc915$export$2e2bcd8739ae039","$g81jD","$0724fc2edc847bc2$export$2e2bcd8739ae039","step","$bbde69f506a53967$export$2e2bcd8739ae039","$2cd05ec7ceec4531$export$2e2bcd8739ae039","$VoUIG","$e2d2e56ba51214aa$export$2e2bcd8739ae039","$hma03","$cNUv0","$73yc0","$30lE7","$6K2nc","$k6ufv","$0ac8a65aa579cc54$export$2e2bcd8739ae039","initial","Error","indexAsNumber","isFinite","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","t","_immediateVirtual","_swiperImmediateVirtual","onSlideToWrapperTransitionEnd","$ca2c3f7f2b80cb2e$export$2e2bcd8739ae039","newIndex","$9525e32ea72263e1$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSlide","loopFix","_clientLeft","rewind","$523356300376327b$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$230229aaaf399bb3$export$2e2bcd8739ae039","$4e88e13af59bc0c1$export$2e2bcd8739ae039","threshold","currentSnap","$ea2bd50b7bab181f$export$2e2bcd8739ae039","slideToIndex","nextTick","$jAQHU","$5b52a0cd14268ef0$export$2e2bcd8739ae039","$iefk9","$8TQCt","$e43a43ab7da51df1$export$2e2bcd8739ae039","$selector","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","loopedSlidesLimit","prependSlides","appendSlides","cloneNode","$d4556bd6c5a7f2d0$export$2e2bcd8739ae039","$67ac46f20fbdf8d4$export$2e2bcd8739ae039","$8kBkW","$fa12fb2ee5c28987$export$2e2bcd8739ae039","$lGUvJ","$610d2748ae2a3d7a$export$2e2bcd8739ae039","moving","isLocked","touchEventsTarget","cursor","$fca95b10f60c741c$export$2e2bcd8739ae039","$d20293ed7c4414e4$var$dummyEventAttached","$d20293ed7c4414e4$var$dummyEventListener","$d20293ed7c4414e4$var$events","nested","domMethod","swiperMethod","passiveListeners","passive","onTouchStart","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$i41Or","$d20293ed7c4414e4$export$2e2bcd8739ae039","$iDuHK","$hwZYB","$7UVOE","$lI65j","$9A257","$d913afca7372dc81$export$2e2bcd8739ae039","originalEvent","$targetEl","type","which","button","noSwipingClass","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","getRootNode","$d913afca7372dc81$var$closestElement","swipeHandler","targetTouches","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$cc35800f8eced6b5$export$2e2bcd8739ae039","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","touchMoveStopPropagation","stopPropagation","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","$5c3a9c649f4b5f25$export$2e2bcd8739ae039","touchEndTime","timeDiff","pathTree","composedPath","updateClickedSlide","currentPos","stopIndex","groupSize","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$d26a01a5d69e1b50$export$2e2bcd8739ae039","autoplay","running","paused","run","$6f991739d9bf88be$export$2e2bcd8739ae039","stopImmediatePropagation","$fce26d50c7e61a92$export$2e2bcd8739ae039","$6iUdR","$50b100814b3eeec4$export$2e2bcd8739ae039","$kp9jL","$4970091fac3b5d77$var$isGridEnabled","$4970091fac3b5d77$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","prop","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$edad5ec5e4a0f3c0$export$2e2bcd8739ae039","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","$lHwXw","$42a915ff7a2ae30b$export$2e2bcd8739ae039","$e5Gui","$fcc72e1d6455c726$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","item","$fcc72e1d6455c726$var$prepareClasses","autoheight","centered","$a4227d791ec395d4$export$2e2bcd8739ae039","$3ljlJ","$8e03bc6e14327c3c$export$2e2bcd8739ae039","$7fdZ5","$26f257a95c76728e$export$2e2bcd8739ae039","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","$5464c818ec923315$export$2e2bcd8739ae039","updateOnImagesReady","loadImage","currentSrc","$3f584f40558f8bb9$export$2e2bcd8739ae039","wasLocked","lastSlideIndex","lastSlideRightEdge","$128e9ae4dc5cc7e1$export$2e2bcd8739ae039","url","uniqueNavElements","$ed458fea3043c525$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$e2yAf","$dbf6f3b26ef5d33c$export$2e2bcd8739ae039","getEl","toggleEl","disabled","disabledClass","tagName","lockClass","$nextEl","$prevEl","onPrevClick","slidePrev","onNextClick","slideNext","hideOnClick","hiddenClass","navigationDisabledClass","_s","targetEl","pagination","clickable","isHidden","$a38c14293bf6942a$export$2e2bcd8739ae039","checkProps","element","$465a9c8875b560bc$export$2e2bcd8739ae039","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","$bulletEl","position","total","paginationType","firstIndex","midIndex","suffix","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","$edm4W","progressbarDirection","scale","scaleX","scaleY","render","paginationHTML","numberOfBullets","$a59367f5a43a662f$export$2e2bcd8739ae039","$b3f342b4a3f8a5f2$export$2e2bcd8739ae039","$0b71822481728c98$export$2e2bcd8739ae039","$5e5e77ec41ddd74a$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$5dc678a0b70a1ea8$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$9fd743be1d735d66$export$2e2bcd8739ae039","removeSlide","$fe3c58194e0402ae$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","slideShadows","$fac719e250553c76$export$2e2bcd8739ae039","effectParams","$slideEl","transformEl","$42fdb4152f52aa22$export$2e2bcd8739ae039","allSlides","$transitionEndTarget","eventTriggered","triggerEvents","$3a65e8106b617bf7$export$2e2bcd8739ae039","shadowClass","$shadowContainer","$shadowEl","$62uwT","$44bb7272a3c62544$var$customerReviewSwiper","$iaGrY"],"version":3,"file":"index.be582c5c.js.map"}